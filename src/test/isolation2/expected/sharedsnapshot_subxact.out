-- This test case is used to test if sharedsnapshot can synced
-- subxact infomations between writer gang and reader gang.

1: CREATE TABLE test_sharedsnapshot_subxact_1(c1 int, c2 int);
CREATE TABLE
1: CREATE TABLE test_sharedsnapshot_subxact_2(c1 int, c2 int);
CREATE TABLE

1: INSERT INTO test_sharedsnapshot_subxact_1 VALUES (1,2),(3,4);
INSERT 0 2

2: BEGIN;
BEGIN
2: INSERT INTO test_sharedsnapshot_subxact_2 VALUES (1,2);
INSERT 0 1
-- start a sub transaction
2: SAVEPOINT p1;
SAVEPOINT
2: INSERT INTO test_sharedsnapshot_subxact_2 VALUES (3,4);
INSERT 0 1

-- Advance ShmemVariableCache->latestCompletedXid, so that
-- session 2's transacion id can be put in xip.
3: CREATE TABLE test_sharedsnapshot_subxact_3(c1 int, c2 int);
CREATE TABLE
3: BEGIN;
BEGIN
3: DROP TABLE test_sharedsnapshot_subxact_3;
DROP TABLE

2: SELECT * FROM test_sharedsnapshot_subxact_2;
 c1 | c2 
----+----
 1  | 2  
 3  | 4  
(2 rows)

-- Issue a query contains reader gang to see if this reader
-- gang will used correct snapshot to scan test_sharedsnapshot_subxact_2.
1: SELECT * FROM test_sharedsnapshot_subxact_1 as t1 left join test_sharedsnapshot_subxact_2 as t2 on t1.c1=t2.c2;
 c1 | c2 | c1 | c2 
----+----+----+----
 1  | 2  |    |    
 3  | 4  |    |    
(2 rows)

2: COMMIT;
COMMIT
-- Check if tuple (3,4) is visible and won't be set xmin to invalid by
-- session 1's reader gang.
2: SELECT * FROM test_sharedsnapshot_subxact_2;
 c1 | c2 
----+----
 3  | 4  
 1  | 2  
(2 rows)


3: COMMIT;
COMMIT

-- Clean up
1: DROP TABLE test_sharedsnapshot_subxact_1;
DROP TABLE
1: DROP TABLE test_sharedsnapshot_subxact_2;
DROP TABLE

-- Test from Github Issue 17275
create table t1_17275(a int);
CREATE TABLE
create table t2_17275(a int);
CREATE TABLE

1: begin;
BEGIN
-- use is not null to make test stable
1: select txid_current() is not null;
 ?column? 
----------
 t        
(1 row)
1: end;
COMMIT

2: begin;
BEGIN
2: select txid_current() is not null;
 ?column? 
----------
 t        
(1 row)

3: begin;
BEGIN
3: savepoint s1;
SAVEPOINT
3: truncate t2_17275;
TRUNCATE TABLE

4: begin;
BEGIN
4: select txid_current() is not null;
 ?column? 
----------
 t        
(1 row)
4: end;
COMMIT

5: begin;
BEGIN
5: select txid_current() is not null;
 ?column? 
----------
 t        
(1 row)

6: select * from t1_17275 join (select oid from pg_class) x(a) on x.a = t1_17275.a;
 a | a 
---+---
(0 rows)

3: savepoint s2;
SAVEPOINT
3: truncate t2_17275;
TRUNCATE TABLE

1q: ... <quitting>
2q: ... <quitting>
3q: ... <quitting>
4q: ... <quitting>
5q: ... <quitting>
6q: ... <quitting>

drop table t1_17275;
DROP TABLE
drop table t2_17275;
DROP TABLE
